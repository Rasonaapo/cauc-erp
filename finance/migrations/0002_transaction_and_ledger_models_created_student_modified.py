# Generated by Django 5.1.1 on 2025-06-04 10:56

import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('finance', '0001_account_and_transaction_initial_models_created'),
        ('hr', '0006_load_designations'),
        ('payroll', '0006_load_steps_data'),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(help_text="ISO Alpha-3 code, e.g. 'GHA' for Ghana", max_length=3, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FinancialYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.CharField(choices=[('3', '3 Months'), ('6', '6 Months'), ('9', '9 Months'), ('12', '12 Months')], default='12', max_length=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed')], default='open', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('description', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(help_text='e.g. 2023/2024', unique=True, verbose_name='Year')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('duration_years', models.PositiveIntegerField(default=4)),
                ('number_of_credit', models.PositiveIntegerField(default=15, help_text='Total number of credits required to complete the program', verbose_name='Mininum Credit Hours')),
                ('number_of_semester', models.PositiveIntegerField(default=8, help_text='Total number of semesters required to complete the program', verbose_name='Number of Semesters')),
                ('session', models.CharField(choices=[('regular', 'Regular'), ('evening', 'Evening'), ('weekend', 'Weekend')], default='regular', max_length=20)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='programs', to='hr.department', verbose_name='Department')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=20, unique=True, verbose_name='Student ID')),
                ('first_name', models.CharField(max_length=100, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=100, verbose_name='Last Name')),
                ('other_names', models.CharField(blank=True, max_length=100, null=True, verbose_name='Other Names')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10)),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Email Address')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, unique=True, verbose_name='Phone Number')),
                ('address', models.TextField(blank=True, null=True, verbose_name='Address')),
                ('guardian_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Guardian Name')),
                ('guardian_phone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Guardian Phone')),
                ('guardian_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Guardian Email')),
                ('enrollment_date', models.DateField(default=django.utils.timezone.now, verbose_name='Enrollment Date')),
                ('status', models.CharField(choices=[('active', 'Active'), ('graduated', 'Graduated'), ('suspended', 'Suspended'), ('withdrawn', 'Withdrawn')], default='active', max_length=20)),
                ('level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='finance.level')),
                ('nationality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='finance.country')),
                ('program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='finance.program')),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255, unique=True, verbose_name='Company Name')),
                ('tax_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Tax Identification Number')),
                ('contact_person', models.CharField(max_length=255, verbose_name='Contact Person')),
                ('contact_position', models.CharField(blank=True, max_length=100, null=True, verbose_name='Position')),
                ('contact_phone', models.PositiveIntegerField(verbose_name='Phone Number')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email Address')),
                ('company_phone', models.CharField(max_length=20, verbose_name='Company Phone')),
                ('company_email', models.EmailField(max_length=254, verbose_name='Company Email')),
                ('website', models.URLField(blank=True, null=True)),
                ('address', models.TextField(help_text='Digital address of the supplier or Post Address')),
                ('city', models.CharField(max_length=100, null=True, verbose_name='City')),
                ('current_balance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_terms', models.PositiveIntegerField(default=30, help_text='Payment terms in days')),
                ('lead_time', models.PositiveIntegerField(help_text='Average lead time in days')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'indexes': [models.Index(fields=['company_name'], name='finance_sup_company_4d3aad_idx'), models.Index(fields=['contact_person'], name='finance_sup_contact_a6d9d0_idx')],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('description', models.TextField()),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('reference', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('cheque_number', models.CharField(blank=True, max_length=50, null=True)),
                ('supplier_name', models.CharField(blank=True, max_length=100, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=100, null=True)),
                ('employee_name', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('posted', 'Posted'), ('revoked', 'Revoked')], default='pending', max_length=15)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='finance.account')),
                ('bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='payroll.bank')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='finance.transactioncategory')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='finance.student')),
                ('employee', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='hr.employee')),
                ('financial_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='finance.financialyear')),
                ('loan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='payroll.loan')),
                ('payroll', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='payroll.payroll')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='finance.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='Ledger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('entry', models.CharField(choices=[('credit', 'Credit'), ('debit', 'Debit')], max_length=10)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='account_ledgers', to='finance.account')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ledgers', to='finance.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='AcademicYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('open', 'Open'), ('closed', 'Closed')], default='open', max_length=10)),
                ('semester', models.CharField(choices=[('1', 'First Semester'), ('2', 'Second Semester'), ('all', 'All Semesters')], default='1', max_length=10)),
                ('session', models.CharField(choices=[('regular', 'Regular'), ('sandwich', 'Sandwich'), ('distance', 'Distance Learning')], default='regular', max_length=20)),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='academic_years', to='finance.year', verbose_name='Academic Year')),
            ],
            options={
                'unique_together': {('start_date', 'end_date', 'session')},
            },
        ),
    ]
