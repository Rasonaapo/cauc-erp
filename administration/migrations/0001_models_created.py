# Generated by Django 5.1.1 on 2025-06-03 14:29

import administration.models
import django.db.models.deletion
import django_quill.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('hr', '0001_hr_models_created'),
        ('payroll', '0004_salary_item_loan_credit_union_and_payroll_models_created'),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_name', models.CharField(max_length=255, unique=True, verbose_name='Document Name')),
                ('associated_entity', models.CharField(blank=True, max_length=255, null=True, verbose_name='Associated Entity')),
                ('expiration_date', models.DateField(blank=True, null=True, verbose_name='Expiration Date')),
                ('notes', django_quill.fields.QuillField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Business Document',
                'verbose_name_plural': 'Business Documents',
            },
        ),
        migrations.CreateModel(
            name='DocumentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Category')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Vendor Name')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Email Address')),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True, unique=True, verbose_name='Phone Number')),
                ('address', models.TextField(blank=True, help_text='Provide detailed address, this may include digital address or post address', null=True, verbose_name='Address Info')),
                ('notes', django_quill.fields.QuillField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='BusinessDocumentFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_file', models.FileField(upload_to=administration.models.file_upload_path, verbose_name='File')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('business_document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_files', to='administration.businessdocument')),
                ('document_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_files', to='administration.documentcategory', verbose_name='Document Category')),
            ],
        ),
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=200)),
                ('meeting_date', models.DateTimeField(verbose_name='Meeting Date')),
                ('sms', models.TextField(help_text='Note: SMS will prepend staff ID and append meeting date & venue', null=True)),
                ('sms_date', models.DateTimeField(verbose_name='SMS Date & Time')),
                ('location', models.CharField(max_length=100, verbose_name='Venue')),
                ('agenda', models.TextField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('on_going', 'On Going'), ('ended', 'Ended')], default='pending', max_length=10)),
                ('department', models.ManyToManyField(related_name='meetings', to='hr.department')),
                ('job', models.ManyToManyField(related_name='meetings', to='hr.job')),
                ('salary_grade', models.ManyToManyField(related_name='meetings', to='payroll.salarygrade', verbose_name='Salary Grade')),
            ],
            options={
                'db_table': 'hr_meeting',
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in_time', models.TimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='hr.employee')),
                ('meeting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='administration.meeting')),
            ],
        ),
        migrations.AddField(
            model_name='businessdocument',
            name='vendor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documents', to='administration.vendor', verbose_name='Vendor'),
        ),
    ]
