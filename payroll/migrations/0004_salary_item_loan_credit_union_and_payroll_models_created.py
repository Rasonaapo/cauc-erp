# Generated by Django 5.1.1 on 2025-05-26 11:09

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('hr', '0001_hr_models_created'),
        ('payroll', '0003_grade_step_renamed_to_step'),
    ]

    operations = [
        migrations.CreateModel(
            name='CreditUnion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('union_name', models.CharField(help_text='Union can be welfare group, bank etc', max_length=150, unique=True, verbose_name='Credit Union Description')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, help_text='If entered, will be the default for all staff in this union, leave it blank for varying amount', max_digits=12, null=True, verbose_name='Amount (Default)')),
                ('all_employee', models.BooleanField(default=False, verbose_name='Include All Staff')),
                ('deduction_start_date', models.DateField(blank=True, help_text='Default date where deduction will commmence for all employees', null=True, verbose_name='Deduction Start Date')),
                ('deduction_end_date', models.DateField(blank=True, help_text='When omitted, deduction will continue indefinitely', null=True, verbose_name='Deduction End Date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applicable_to', models.ManyToManyField(blank=True, related_name='applicable_credit_unions', to='hr.employee', verbose_name='Applicable To')),
                ('department', models.ManyToManyField(blank=True, related_name='credit_unions', to='hr.department')),
                ('excluded_from', models.ManyToManyField(blank=True, related_name='excluded_credit_unions', to='hr.employee', verbose_name='Excluded From')),
            ],
        ),
        migrations.CreateModel(
            name='Loan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('loan_type', models.CharField(choices=[('salary_advance', 'Salary Advance'), ('rent_advance', 'Rent Advance'), ('vehicle', 'Vehicle Loan'), ('personal', 'Personal Loan'), ('medical', 'Medical Loan'), ('education', 'Education Loan')], default='salary_advance', max_length=20, verbose_name='Loan Type')),
                ('principal_amount', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Principal Amount')),
                ('interest_rate', models.DecimalField(decimal_places=2, default=0.0, max_digits=5, verbose_name='Interest Rate (%)')),
                ('duration_in_months', models.PositiveIntegerField(verbose_name='Duration (Months)')),
                ('monthly_installment', models.DecimalField(decimal_places=2, editable=False, max_digits=12, verbose_name='Monthly Installment')),
                ('total_repayable_amount', models.DecimalField(decimal_places=2, editable=False, max_digits=12, verbose_name='Total Repayable Amount')),
                ('outstanding_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Outstanding Balance')),
                ('status', models.CharField(choices=[('pending', 'Pending Approval'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('active', 'Active'), ('paid_off', 'Paid Off'), ('defaulted', 'Defaulted')], default='pending', max_length=10, verbose_name='Loan Status')),
                ('purpose', models.TextField(blank=True, null=True, verbose_name='Loan Purpose')),
                ('applied_on', models.DateField(verbose_name='Applied On')),
                ('approved_on', models.DateField(blank=True, null=True, verbose_name='Approved On')),
                ('active_on', models.DateField(blank=True, null=True, verbose_name='Active On')),
                ('deduction_end_date', models.DateField(blank=True, null=True, verbose_name='Deduction End Date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='loans', to='hr.employee')),
            ],
        ),
        migrations.CreateModel(
            name='LoanRepayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Amount Paid')),
                ('date_paid', models.DateField(default=django.utils.timezone.now, verbose_name='Date Paid')),
                ('payment_reference', models.CharField(blank=True, max_length=100, null=True, verbose_name='Payment Reference')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('loan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='repayments', to='payroll.loan')),
            ],
        ),
        migrations.CreateModel(
            name='Payroll',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('process_month', models.CharField(choices=[('01', 'January'), ('02', 'February'), ('03', 'March'), ('04', 'April'), ('05', 'May'), ('06', 'June'), ('07', 'July'), ('08', 'August'), ('09', 'September'), ('10', 'October'), ('11', 'November'), ('12', 'December')], max_length=12, verbose_name='Processing Month')),
                ('process_year', models.PositiveIntegerField(verbose_name='Processing Year')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='Payroll Description')),
                ('active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('posted', models.BooleanField(default=False, verbose_name='Is Posted')),
                ('condition', models.CharField(choices=[('all', 'All Types'), ('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contractual', 'Contractual'), ('temporary', 'Temporary')], default='all', max_length=12, verbose_name='Employment Type')),
                ('error_mode', models.CharField(choices=[('strict', 'Strict mode ensures all staff records are accurate and complete before processing'), ('mute', 'Mute/Silence mode processes payroll to the exclusion of staff with incomplete records')], default='strict', max_length=12, verbose_name='Error Processing Mode')),
                ('payment_rate', models.IntegerField(default=100, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Payment Rate')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pv_count', models.IntegerField(default=0, editable=False, verbose_name='Number of Vouchers')),
                ('applicable_to', models.ManyToManyField(blank=True, related_name='applicable_payrolls', to='hr.employee', verbose_name='Applicable To')),
                ('department', models.ManyToManyField(blank=True, related_name='payrolls', to='hr.department', verbose_name='Departments')),
                ('designation', models.ManyToManyField(blank=True, related_name='payrolls', to='hr.designation', verbose_name='Designations')),
                ('excluded_from', models.ManyToManyField(blank=True, related_name='excluded_payrolls', to='hr.employee', verbose_name='Excluded From')),
                ('salary_grade', models.ManyToManyField(blank=True, related_name='payrolls', to='payroll.salarygrade', verbose_name='Salary Grades')),
                ('step', models.ManyToManyField(blank=True, related_name='payroll', to='payroll.salarystep', verbose_name='Steps')),
            ],
            options={
                'verbose_name_plural': 'Payrolls',
            },
        ),
        migrations.CreateModel(
            name='PayrollError',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('error_category', models.CharField(choices=[('bank', 'Missing Bank Details'), ('salary_grade', 'Missing Salary Grade'), ('double_entry', 'Double Entry Failure')], max_length=12)),
                ('error_details', models.TextField(help_text='Details of the missing or invalid data.', null=True, verbose_name='Error Details')),
                ('resolved', models.BooleanField(default=False, verbose_name='Is Resolved?')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Error Logged At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Updated At')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payroll_errors', to='hr.employee', verbose_name='Employee')),
                ('payroll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='errors', to='payroll.payroll', verbose_name='Related Payroll')),
            ],
            options={
                'verbose_name': 'Payroll Error',
                'verbose_name_plural': 'Payroll Errors',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SalaryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_name', models.CharField(max_length=100, unique=True, verbose_name='Item Name')),
                ('alias_name', models.CharField(help_text='Name will appear on payslip', max_length=100, verbose_name='Alias Name')),
                ('effect', models.CharField(choices=[('addition', 'Addition'), ('deduction', 'Deduction')], default='addition', max_length=10, verbose_name='Entry')),
                ('rate_type', models.CharField(choices=[('fix', 'Fix'), ('factor', 'Factor'), ('variable', 'Variable')], default='fix', max_length=10, verbose_name='Rate Type')),
                ('rate_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Rate')),
                ('rate_dependency', models.CharField(help_text="Only use when rate is of type 'Variable'", max_length=100, null=True, verbose_name='Multiply By Rate')),
                ('staff_source', models.CharField(choices=[('filters', 'Filters'), ('import', 'Import')], default='filters', max_length=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_on', models.DateField(help_text='Leave blank if item will continually remain active', null=True, verbose_name='Expires On')),
                ('condition', models.CharField(choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contractual', 'Contractual'), ('temporary', 'Temporary')], default='full_time', max_length=12)),
                ('eligible_employee_count', models.PositiveIntegerField(default=0, editable=False)),
                ('applicable_to', models.ManyToManyField(blank=True, related_name='applicable_salary_items', to='hr.employee', verbose_name='Applicable To')),
                ('department', models.ManyToManyField(blank=True, related_name='salary_items', to='hr.department')),
                ('designation', models.ManyToManyField(blank=True, related_name='salary_items', to='hr.designation')),
                ('excluded_from', models.ManyToManyField(blank=True, related_name='excluded_salary_items', to='hr.employee', verbose_name='Excluded From')),
                ('job', models.ManyToManyField(blank=True, related_name='salary_items', to='hr.job')),
                ('salary_grade', models.ManyToManyField(blank=True, related_name='salary_items', to='payroll.salarygrade', verbose_name='Salary Grade')),
                ('step', models.ManyToManyField(blank=True, related_name='salary_items', to='payroll.salarystep')),
            ],
        ),
        migrations.CreateModel(
            name='PayrollItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_type', models.CharField(choices=[('salary_item', 'Salary Item'), ('loan', 'Loan'), ('credit_union', 'Credit Union'), ('tax', 'Tax'), ('tax_relief', 'Tax Relief'), ('employer_ssnit', 'Employer SSNIT'), ('employee_ssnit', 'Employee SSNIT'), ('bank', 'Bank'), ('gross_salary', 'Gross Salary'), ('basic_salary', 'Basic Salary'), ('net_salary', 'Net Salary'), ('step', 'Step'), ('salary_grade', 'Salary Grade'), ('taxable', 'Taxable'), ('earning', 'Earning'), ('deduction', 'Deduction'), ('other', 'Other')], max_length=20, verbose_name='Item Type')),
                ('dependency', models.CharField(blank=True, max_length=255, null=True, verbose_name='Dependency ID')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Amount')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('entry', models.CharField(blank=True, choices=[('credit', 'Credit'), ('debit', 'Debit')], max_length=6, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payroll_items', to='payroll.bank')),
                ('credit_union', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payroll_items', to='payroll.creditunion')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payroll_items', to='hr.employee')),
                ('loan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payroll_items', to='payroll.loan')),
                ('payroll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='payroll.payroll')),
                ('salary_item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payroll_items', to='payroll.salaryitem')),
            ],
            options={
                'verbose_name_plural': 'Payroll Items',
            },
        ),
        migrations.CreateModel(
            name='StaffCreditUnion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Monthly Deduction')),
                ('deduction_start_date', models.DateField(blank=True, help_text="Until date is entered, deduction won't take place", null=True, verbose_name='Deduction Start Date')),
                ('deduction_end_date', models.DateField(blank=True, help_text='When omitted, deduction will continue indefinitely.', null=True, verbose_name='Deduction Start Date')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('credit_union', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_credit_unions', to='payroll.creditunion', verbose_name='Credit Union')),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_credit_unions', to='hr.employee')),
            ],
        ),
        migrations.CreateModel(
            name='StaffCreditUnionDeduction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=12)),
                ('date_paid', models.DateField(default=django.utils.timezone.now, verbose_name='Date Paid')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('staff_credit_union', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_credit_unions', to='payroll.staffcreditunion', verbose_name='Staff Credit Union')),
            ],
        ),
        migrations.CreateModel(
            name='StaffSalaryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variable', models.IntegerField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('employee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hr.employee')),
                ('salary_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='staff_salary_items', to='payroll.salaryitem', verbose_name='Salary Item')),
            ],
        ),
        migrations.AddIndex(
            model_name='loan',
            index=models.Index(fields=['loan_type', 'status'], name='loantype_status_idx'),
        ),
        migrations.AddIndex(
            model_name='loan',
            index=models.Index(fields=['loan_type'], name='loan_type_idx'),
        ),
        migrations.AddIndex(
            model_name='loan',
            index=models.Index(fields=['employee', 'status'], name='loan_status_idx'),
        ),
        migrations.AddIndex(
            model_name='loan',
            index=models.Index(fields=['active_on'], name='active_on_idx'),
        ),
        migrations.AddIndex(
            model_name='loan',
            index=models.Index(fields=['deduction_end_date'], name='loan_end_date_idx'),
        ),
        migrations.AddIndex(
            model_name='payroll',
            index=models.Index(fields=['process_month', 'process_year'], name='month_year_idx'),
        ),
        migrations.AddIndex(
            model_name='payroll',
            index=models.Index(fields=['active'], name='active_idx'),
        ),
        migrations.AddIndex(
            model_name='payroll',
            index=models.Index(fields=['posted'], name='posted_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='payroll',
            unique_together={('process_month', 'process_year', 'payment_rate', 'description', 'condition')},
        ),
        migrations.AddIndex(
            model_name='payrollerror',
            index=models.Index(fields=['payroll', 'error_category'], name='payroll_errorcategory_idx'),
        ),
        migrations.AddIndex(
            model_name='payrollerror',
            index=models.Index(fields=['error_category'], name='error_cateogry_idx'),
        ),
        migrations.AddIndex(
            model_name='payrollitem',
            index=models.Index(fields=['payroll', 'item_type'], name='payroll_itemtype_idx'),
        ),
        migrations.AddIndex(
            model_name='payrollitem',
            index=models.Index(fields=['item_type'], name='item_type_idx'),
        ),
        migrations.AddIndex(
            model_name='payrollitem',
            index=models.Index(fields=['entry'], name='entry_idx'),
        ),
        migrations.AddIndex(
            model_name='payrollitem',
            index=models.Index(fields=['dependency'], name='dependency_idx'),
        ),
        migrations.AddIndex(
            model_name='payrollitem',
            index=models.Index(fields=['payroll', 'dependency'], name='payroll_dependency_idx'),
        ),
        migrations.AddIndex(
            model_name='payrollitem',
            index=models.Index(fields=['payroll', 'entry'], name='payroll_entry_idx'),
        ),
        migrations.AddIndex(
            model_name='staffcreditunion',
            index=models.Index(fields=['deduction_start_date'], name='cu_deduction_start_idx'),
        ),
        migrations.AddIndex(
            model_name='staffcreditunion',
            index=models.Index(fields=['deduction_end_date'], name='cu_deduction_end_idx'),
        ),
        migrations.AddIndex(
            model_name='staffcreditunion',
            index=models.Index(fields=['employee'], name='cu_employee_idx'),
        ),
        migrations.AddIndex(
            model_name='staffcreditunion',
            index=models.Index(fields=['credit_union'], name='cu_union_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='staffsalaryitem',
            unique_together={('salary_item', 'employee')},
        ),
    ]
